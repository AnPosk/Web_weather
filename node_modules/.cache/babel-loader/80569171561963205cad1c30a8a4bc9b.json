{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anastasiya\\\\Desktop\\\\web\\\\weather\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Info from \"./components/info\";\nimport Form from \"./components/form\";\nimport Weather from \"./components/out\";\nconst API_KEY = \"03f901de29a483a8a216622ef62e58b4\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temp_max: undefined,\n      temp_min: undefined,\n      city: undefined,\n      country: undefined,\n      sunrise: undefined,\n      sunset: undefined,\n      weather_description: undefined,\n      wind: undefined,\n      clouds: undefined,\n      pressure: undefined,\n      error: undefined\n    };\n\n    this.gettingWeather = async e => {\n      e.preventDefault();\n      var city = e.target.elements.city.value;\n\n      if (city) {\n        const apiUrl = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n        const data = await apiUrl.json();\n        console.log(data);\n        var sunset = data.sys.sunset;\n        var date = new Date();\n        date.setTime(sunset * 1000);\n        var sunset_data = date.toLocaleTimeString();\n        var sunrise = data.sys.sunrise;\n        var dates = new Date();\n        dates.setTime(sunrise * 1000);\n        var sunrise_data = dates.toLocaleTimeString();\n        this.setState({\n          temp_max: data.main.temp_max,\n          temp_min: data.main.temp_min,\n          city: data.name,\n          country: data.sys.country,\n          sunrise: sunrise_data,\n          sunset: sunset_data,\n          weather_description: data.weather[\"0\"].description,\n          wind: data.wind.speed,\n          clouds: data.clouds.all,\n          pressure: data.main.pressure,\n          error: undefined\n        });\n      } else {\n        this.setState({\n          temp_max: undefined,\n          temp_min: undefined,\n          city: undefined,\n          country: undefined,\n          sunrise: undefined,\n          sunset: undefined,\n          weather_description: undefined,\n          wind: undefined,\n          clouds: undefined,\n          pressure: undefined,\n          error: \"Your city name!\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Info, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 35\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      WeatherMethod: this.gettingWeather,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Weather, {\n      temp_max: this.state.temp_max,\n      temp_min: this.state.temp_min,\n      city: this.state.city,\n      country: this.state.country,\n      sunrise: this.state.sunrise,\n      sunset: this.state.sunset,\n      weather_description: this.state.weather_description,\n      wind: this.state.wind,\n      clouds: this.state.clouds,\n      pressure: this.state.pressure,\n      error: this.state.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 36\n      }\n    }))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Anastasiya/Desktop/web/weather/src/App.js"],"names":["React","Info","Form","Weather","API_KEY","App","Component","state","temp_max","undefined","temp_min","city","country","sunrise","sunset","weather_description","wind","clouds","pressure","error","gettingWeather","e","preventDefault","target","elements","value","apiUrl","fetch","data","json","console","log","sys","date","Date","setTime","sunset_data","toLocaleTimeString","dates","sunrise_data","setState","main","name","weather","description","speed","all","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Info from \"./components/info\";\nimport Form from \"./components/form\"\nimport Weather from \"./components/out\"\n\nconst API_KEY = \"03f901de29a483a8a216622ef62e58b4\";\n\nclass App extends React.Component {\n\n  state = {\n    temp_max: undefined,\n    temp_min: undefined,\n    city: undefined,\n    country: undefined,\n    sunrise: undefined,\n    sunset: undefined,\n    weather_description: undefined,\n    wind: undefined,\n    clouds: undefined,\n    pressure: undefined,\n    error: undefined\n  }\n\n  gettingWeather = async (e) => {  \n    e.preventDefault();\n    var city = e.target.elements.city.value;  \n    \n\n    if(city) {\n      const apiUrl = await \n      fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n      const data = await apiUrl.json();\n      console.log(data);\n      \n      var sunset = data.sys.sunset;\n      var date = new Date();\n      date.setTime(sunset *1000);\n      var sunset_data = date.toLocaleTimeString();\n\n      var sunrise = data.sys.sunrise;\n      var dates = new Date();\n      dates.setTime(sunrise *1000 );\n      var sunrise_data = dates.toLocaleTimeString();\n\n      this.setState({\n        temp_max: data.main.temp_max,\n        temp_min: data.main.temp_min,\n        city: data.name,\n        country: data.sys.country,\n        sunrise: sunrise_data,\n        sunset: sunset_data,\n        weather_description: data.weather[\"0\"].description,\n        wind: data.wind.speed,\n        clouds: data.clouds.all,\n        pressure: data.main.pressure,\n        error: undefined\n    });\n  } else {\n      this.setState({\n        temp_max: undefined,\n        temp_min: undefined,\n        city: undefined,\n        country: undefined,\n        sunrise: undefined,\n        sunset: undefined,\n        weather_description: undefined,\n        wind: undefined,\n        clouds: undefined,\n        pressure: undefined,\n        error: \"Your city name!\"\n    });\n  }\n} \n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"main\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"info\"><Info /></div>\n            <div className=\"form\">\n            <Form WeatherMethod={this.gettingWeather} /></div>\n            <div className=\"form1\"><Weather \n              temp_max={this.state.temp_max}\n              temp_min={this.state.temp_min}\n              city={this.state.city}\n              country={this.state.country}\n              sunrise={this.state.sunrise}\n              sunset={this.state.sunset}\n              weather_description={this.state.weather_description}\n              wind={this.state.wind}\n              clouds={this.state.clouds}\n              pressure={this.state.pressure}\n              error={this.state.error}\n            />\n              </div>\n            </div>\n          </div>  \n        </div> \n      </div>  \n    );\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}