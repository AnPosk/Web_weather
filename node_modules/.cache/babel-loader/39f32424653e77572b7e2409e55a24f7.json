{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anastasiya\\\\Desktop\\\\web\\\\weather\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Info from \"./components/info\";\nimport Form from \"./components/form\";\nimport Weather from \"./components/out\";\nconst API_KEY = \"03f901de29a483a8a216622ef62e58b4\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temp_max: undefined,\n      temp_min: undefined,\n      city: undefined,\n      country: undefined,\n      sunrise: undefined,\n      sunset: undefined,\n      weather_descriription: undefined,\n      error: undefined\n    };\n\n    this.gettingWeather = async e => {\n      e.preventDefault();\n      var city = e.target.elements.city.value;\n\n      if (city) {\n        const apiUrl = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n        const data = await apiUrl.json();\n        console.log(data);\n        var sunset = data.sys.sunset;\n        var date = new Date();\n        date.setTime(sunset * 1000);\n        var sunset_data = date.toLocaleTimeString();\n        var sunrise = data.sys.sunrise;\n        var date = new Date();\n        date.setTime(sunrise * 1000);\n        var sunrise_data = date.toLocaleTimeString();\n        this.setState({\n          temp_max: data.main.temp_max,\n          temp_min: data.main.temp_min,\n          city: data.name,\n          country: data.sys.country,\n          sunrise: sunrise_data,\n          sunset: sunset_data,\n          weather_descriription: data.weather[\"0\"].main,\n          error: undefined\n        });\n      } else {\n        this.setState({\n          temp_max: undefined,\n          temp_min: undefined,\n          city: undefined,\n          country: undefined,\n          sunrise: undefined,\n          sunset: undefined,\n          weather_descriription: undefined,\n          error: \"input\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-5 info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Info, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 44\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-7 form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      WeatherMethod: this.gettingWeather,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Weather, {\n      temp_max: this.state.temp_max,\n      temp_min: this.state.temp_min,\n      city: this.state.city,\n      country: this.state.country,\n      sunrise: this.state.sunrise,\n      sunset: this.state.sunset,\n      weather_descriription: this.state.weather,\n      error: this.state.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Anastasiya/Desktop/web/weather/src/App.js"],"names":["React","Info","Form","Weather","API_KEY","App","Component","state","temp_max","undefined","temp_min","city","country","sunrise","sunset","weather_descriription","error","gettingWeather","e","preventDefault","target","elements","value","apiUrl","fetch","data","json","console","log","sys","date","Date","setTime","sunset_data","toLocaleTimeString","sunrise_data","setState","main","name","weather","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Info from \"./components/info\";\nimport Form from \"./components/form\"\nimport Weather from \"./components/out\"\n\nconst API_KEY = \"03f901de29a483a8a216622ef62e58b4\";\n\nclass App extends React.Component {\n\n  state = {\n    temp_max: undefined,\n    temp_min: undefined,\n    city: undefined,\n    country: undefined,\n    sunrise: undefined,\n    sunset: undefined,\n    weather_descriription: undefined,\n    error: undefined\n  }\n\n  gettingWeather = async (e) => {  \n    e.preventDefault();\n    var city = e.target.elements.city.value;  \n   \n    \n\n    if(city) {\n      const apiUrl = await \n      fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n      const data = await apiUrl.json();\n      console.log(data);\n      \n      var sunset = data.sys.sunset;\n      var date = new Date();\n      date.setTime(sunset * 1000);\n      var sunset_data = date.toLocaleTimeString();\n\n      var sunrise = data.sys.sunrise;\n      var date = new Date();\n      date.setTime(sunrise * 1000);\n      var sunrise_data = date.toLocaleTimeString();\n    \n      this.setState({\n        temp_max: data.main.temp_max,\n        temp_min: data.main.temp_min,\n        city: data.name,\n        country: data.sys.country,\n        sunrise: sunrise_data,\n        sunset: sunset_data,\n        weather_descriription: data.weather[\"0\"].main,\n        error: undefined\n    });\n  } else {\n      this.setState({\n        temp_max: undefined,\n        temp_min: undefined,\n        city: undefined,\n        country: undefined,\n        sunrise: undefined,\n        sunset: undefined,\n        weather_descriription: undefined,\n        error: \"input\"\n    });\n  }\n} \n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"main\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-sm-5 info\"><Info /></div>\n            <div className=\"col-sm-7 form\">\n            <Form WeatherMethod={this.gettingWeather} />\n        <Weather \n          temp_max={this.state.temp_max}\n          temp_min={this.state.temp_min}\n          city={this.state.city}\n          country={this.state.country}\n          sunrise={this.state.sunrise}\n          sunset={this.state.sunset}\n          weather_descriription={this.state.weather}\n          error={this.state.error}\n        />\n            </div>\n          </div>\n        </div>  \n        </div> \n        \n      </div>  \n    );\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}